-*- indented-text -*-

This is `EPC', the External Procedure Call toolkit. It is used to invoke
external procedures from Oracle PL/SQL.

EPC itself consists of the library, libepc.la, an IDL compiler and
the headers installed in `/usr/local/include'.

The EPC toolkit depends on the package DBUG
(see www.sourceforge.net/projects/transferware). This should be
installed into the same lib and bin directories as EPC (e.g. use same
prefix when installing).

DOCUMENTATION
=============
- doc/c/index.html
- doc/epcman.doc
- doc/sql/index.html
- utils/empty_pipes.html

INSTALLATION
============
Installation using the GNU build tools is described in INSTALL. 

Windows specific
================
For Windows platforms the Cygwin suite can be used. There is one caveat:
the libraries should not depend on the Cygwin DLL, but on the Microsoft
run-time DLLs instead. See the file BUGS in the DBUG distribution for
more information.

On Windows systems the environment variable ORACLE_HOME must be known to
the configure script. The value must have the following syntax:
<drive>:/<Oracle directory path>. Without this the value for ORACLE_HOME is
determined by the path to the PRO*C compiler which will result in
something like /cygdrive/<drive>/<Oracle directory>. This will confuse
the MinGW compiler.

An example for Windows:

./configure CPPFLAGS="-Ic:/usr/local/mingw32/include" \
LDFLAGS="-Lc:/usr/local/mingw32/lib" ORACLE_HOME="c:/oracle/ora81" \
CC="gcc -mno-cygwin" --prefix=c:/usr/local/mingw32

Solaris specific
================
On SUN Solaris version 9 the library libm has to be added to the list of
libraries, because the Oracle xml library libxml10 needs it. This can be
done by specifying LIBS=-lm on the configure command line. For 64 bit
architectures this should be LIBS=-lm64.

Local Variables:
fill-column: 72
End:
