-*- indented-text -*-

This is `EPC', the External Procedure Call toolkit. It is used to invoke
external procedures from Oracle PL/SQL.

EPC itself consists of the library, libepc.la, an IDL compiler and
the headers installed in `/usr/local/include'.

The EPC toolkit depends on the package DBUG
(see www.sourceforge.net/projects/transferware). This should be
installed into the same lib and bin directories as EPC (e.g. use same
prefix when installing).

DOCUMENTATION
=============
- doc/c/index.html
- doc/epcman.doc
- doc/sql/index.html
- utils/empty_pipes.html

INSTALLATION
============
Installation using the GNU build tools is described in INSTALL. 

The EPC needs to Oracle XML C SDK. Download this from OTN and install it
into $ORACLE_HOME/xdk.

An important feature is enabling/disabling server interrupts. Because
the EPC server waits forever for a message using
dbms_pipe.receieve_message, it may be difficult to stop the server
gracefully. The --enable-server-interrupt configure option enables the
EPC server to be killed by an interrupt (CTRL-C). The default is to
enable this, but this means that a second Oracle session is started
which sends an empty message into the request pipe so the EPC server can
exit. This can be disabled by --disable-server-interrupt.

Windows specific
================
For Windows platforms the Cygwin suite with GCC and the MinGW extension
can be used. There is one caveat: the libraries should not depend on the
Cygwin DLL, but on the Microsoft run-time DLLs instead. See the file
BUGS in the DBUG distribution for more information.

The configure script will try to set the environment correctly. In case
that fails the following configure command may be tried (provided dbug
is installed into /cygdrive/c/usr/local):

./configure CPPFLAGS="-I/cygdrive/c/usr/local/include" \
LDFLAGS="-L/cygdrive/c/usr/local/lib" \
CC="gcc -mno-cygwin" --prefix=/cygdrive/c/usr/local

Solaris specific
================
On SUN Solaris version 9 or higher the library libm has to be added to
the list of libraries, because the Oracle xml library libxml10 needs
it. 

The configure script will try to set the environment correctly. In case
that fails the following configure command may be tried:

./configure LIBS="-lm"

Local Variables:
fill-column: 72
End:
