#ifndef IDL_DEFS_H
#define IDL_DEFS_H

/*
 * Filename             : idl_defs.h
 *
 * Creation date        : 25-JUN-1997
 *
 * Created by           : Huub van der Wouden
 *
 * Company              : Transfer Solutions bv
 *
 * --- Description -------------------------------------------------------
 * Constants for IDL parsing and code generation
 *
 * --- Revision History --------------------------------------------------
 * $Log$
 * Revision 1.16  2005/01/03 12:26:42  gpaulissen
 * Release 4.4.0
 *
 * Revision 1.15  2004/12/28 12:18:10  gpaulissen
 * Test on Amazon
 *
 * Revision 1.14  2004/12/20 13:29:15  gpaulissen
 * make lint
 *
 * Revision 1.13  2004/12/16 16:03:08  gpaulissen
 * Web services added
 *
 * Revision 1.12  2004/10/21 11:54:32  gpaulissen
 * indent *.c *.h
 *
 * Revision 1.11  2004/10/18 15:17:33  gpaulissen
 * XML enabling of EPC
 *
 * Revision 1.10  2004/05/21 15:07:51  gpaulissen
 * SOAP messages
 *
 * Revision 1.9  2004/03/28 15:32:25  gpaulissen
 * Generate C code only.
 *
 * Revision 1.8  2004/02/22 17:17:13  gpaulissen
 * Bug id 901781
 *
 * Revision 1.7  2002/10/28 14:53:04  gpaulissen
 * Using GNU standards.
 *
 * Revision 1.6  2002/10/19 13:58:13  gpaulissen
 * function signature instead of function name
 *
 * Revision 1.5  2001/09/18 14:34:09  gpaulissen
 * Oracle 8 external routines added.
 *
 * Revision 1.4  1998/07/27 15:18:54  gert-jan
 * First release.
 *
 * Revision 1.3  1998/05/06 20:23:43  gpauliss
 * Added support for longs
 *
 * Revision 1.2  1998/02/19 16:42:06  gpauliss
 * Using dos filename conventions (8.3)
 *
 * Revision 1.1  1998/01/25 15:20:20  gpauliss
 * Initial revision
 *
 * Revision 1.3  1997/07/10 14:33:19  hgwouden
 * added some constants
 *
 *
 */

#define MAX_PARM_NAME_LEN       32      /* must be a multiple of 4 */

/* The function name might also be the function signature */
#define MAX_FUNC_NAME_LEN       512     /* must be a multiple of 4 */
#define MAX_INTERFACE_NAME_LEN  32      /* must be a multiple of 4 */
#define MAX_NAMESPACE_LEN       128     /* must be a multiple of 4 */
#define MAX_STR_VAL_LEN         4096    /* excluding terminating zero */
#define MAX_FUNCTIONS           100
#define MAX_PARAMETERS          20

/* KEYWORDS GENERATED BY IDL COMPILER */

/* type definitions: make sure they are a double word long in order to avoid 
   alignment problems in structures */

#ifdef dword_t_defined
qsghsgh
#endif

#ifndef dword_t_defined
#define dword_t_defined 1
typedef long dword_t;
#endif

#ifndef word_t_defined
#define word_t_defined 1
typedef short word_t;
#endif

/* GJP 2018-08-18 Quick fix to not define string here since it is already defined in sqlcpr.h */
#define string_defined 1

#ifndef string_defined
#define string_defined 1
typedef char *string;
#endif

/* DATA TYPES */
enum idl_type {
  C_STRING = 1,
#define C_DATATYPE_MIN C_STRING
  C_INT = 2,
  C_LONG = 3,
  C_FLOAT = 4,
  C_DOUBLE = 5,
  C_VOID = 6,
  C_XML = 7,
  C_DATE = 8
#define C_DATATYPE_MAX C_DATE
};

/* align structures in non LINT mode */

#ifdef S_SPLINT_S
typedef enum idl_type idl_type_t;
#else
typedef dword_t idl_type_t;
#endif

/* PARAMETER MODES */
enum idl_mode {
  C_IN = 101,
#define C_PARAMETER_MODE_MIN C_IN
  C_OUT = 102,
  C_INOUT = 103
#define C_PARAMETER_MODE_MAX C_INOUT
};

#ifdef S_SPLINT_S
typedef enum idl_mode idl_mode_t;
#else
typedef dword_t idl_mode_t;
#endif

typedef int idl_int_t;
typedef long idl_long_t;
typedef float idl_float_t;
typedef double idl_double_t;
typedef char *idl_string_t;
typedef char *idl_xml_t;
#define MAX_DATE_LEN            17 /* ISO date */
typedef char *idl_date_t;

#endif
